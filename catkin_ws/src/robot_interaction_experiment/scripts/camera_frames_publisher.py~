#!/usr/bin/env python

import cv2
import numpy as np
#from primesense import openni2
from robot_interaction_experiment.msg import Image
import rospy

if __name__ == '__main__':
    camera_num = 0
    camera=cv2.VideoCapture(0)
    if not camera.isOpened():
        print 'problem with camera', camera_num
        exit()
    print camera.set(cv2.cv.CV_CAP_PROP_FRAME_WIDTH, 1280)
    print camera.set(cv2.cv.CV_CAP_PROP_FRAME_HEIGHT, 720)
    print camera.set(cv2.cv.CV_CAP_PROP_FRAME_HEIGHT, 720)
    
    rospy.init_node('camera_frames_publisher', anonymous=True)
    camera_frames_publisher = rospy.Publisher('camera_frames', Image)
    
    rval, frame = camera.read()
    resolution_y, resolution_x, _ = np.shape(frame)
    print 'camera', resolution_x, 'x', resolution_y
    width = 710 #1280
    height = 460 #720
    print 'focus ', width, 'x', height
    
    while not rospy.is_shutdown():                
        rval, frame = camera.read()
        
        #frame = np.fliplr(frame).copy()
        #frame = np.rot90(frame, 2).copy()
        
        sub_frame = frame[(resolution_y-height)/2:resolution_y-(resolution_y-height)/2, (resolution_x-width)/2:resolution_x-(resolution_x-width)/2]
        
        msg = Image()
        msg.data = sub_frame.tostring()
        msg.width = width
        msg.height = height
        camera_frames_publisher.publish(msg)
        
        #img = frame.copy()
        cv2.rectangle(frame, ((resolution_x-width)/2, (resolution_y-height)/2), (resolution_x-(resolution_x-width)/2, resolution_y-(resolution_y-height)/2), (255, 255, 255))
        cv2.imshow('camera', frame)
        cv2.waitKey(50)

'''
OPENNI2_LOCATION = '/home/meka/Downloads/OpenNI-Linux-x86-2.2/Redist'
RESOLUTION_X = 640
RESOLUTION_Y = 480
FPS = 15

if __name__ == '__main__':
    rospy.init_node('camera_frames_publisher', anonymous=True)
    camera_frames_publisher = rospy.Publisher('camera_frames', Image)
    
    openni2.initialize(OPENNI2_LOCATION)
    dev = openni2.Device.open_any()
    rgb_stream = dev.create_color_stream()
    mode = rgb_stream.get_video_mode()
    mode.resolutionX = RESOLUTION_X
    mode.resolutionY = RESOLUTION_Y
    mode.fps = FPS
    print mode.resolutionX, 'x', mode.resolutionY, '@', mode.fps, 'fps'
    
    rgb_stream.set_video_mode(mode)
    rgb_stream.start()
    
    width = 480
    height = 200
    print 'images of', width, 'x', height
    
    while not rospy.is_shutdown():
        frame = rgb_stream.read_frame()
        data = np.frombuffer(frame.get_buffer_as_uint8(), dtype=np.uint8)
        img = np.reshape(data, (RESOLUTION_Y, RESOLUTION_X, 3))
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        img = np.fliplr(img)
        img = np.rot90(img, 2)
        
        data = img[(RESOLUTION_Y-height)/2:RESOLUTION_Y-(RESOLUTION_Y-height)/2, (RESOLUTION_X-width)/2:RESOLUTION_X-(RESOLUTION_X-width)/2]
        
        msg = Image()
        msg.data = data.tostring()
        msg.width = width
        msg.height = height
        camera_frames_publisher.publish(msg)
'''
